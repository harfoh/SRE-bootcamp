# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(slug)s
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
prepend_sys_path = .

# timezone to use in the dates of the migration filenames.
# string value for time zone - use None for current timezone, or 'UTC' for
# universal time
# timezone = UTC

# version location specification; this defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "os.path.sep"
# version_locations = %(here)s/bar:%(here)s/version2
version_locations = alembic/versions

# version table name; default 'alembic_version'
# version_table = alembic_version

# version table schema; default None
# version_table_schema =

# version table create order; default None
# the order in which the version table is created; more than one option can
# be provided here, using a comma-separated string.
# The default of None is to use the platform default
# create_version_table_order = None

# add your sqlalchemy.url here
sqlalchemy.url = driver://user:pass@localhost/dbname

# sys.path path, will be prepended to sys.path if present.
prepend_sys_path = .

# timezone to use in the dates of the migration filenames.
# string value for time zone - use None for current timezone, or 'UTC' for
# universal time
# timezone = UTC

[post_write_hooks]
# post_write_hooks defines hooks to be run on the
# script output file generated by each revision.
# hooks can be for reformatting code, etc.
#
# format using "black" - use the "black" command as the hook
# formatter.
# hooks can have arguments, as in this example, which
# causes the hook to format using "black" with a line length
# of 79 characters, and the "-l" and "--safe" options.
#
# black_formatter = black -l 79 -t py35

# add your formatter options here

